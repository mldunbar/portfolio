html {
  box-sizing: border-box; }

*,
*::after,
*::before {
  box-sizing: inherit; }

html, body, div, span, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

a {
  text-decoration: none;
  color: #333; }

ul, ol, li {
  list-style: none; }

.name {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 82.9403914003%;
  margin-left: 17.0596085997%;
  font-size: 12em;
  margin-top: 5%; }
  .name::after {
    clear: both;
    content: "";
    display: table; }
  .name:last-child {
    margin-right: 0; }

.titles {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 65.8807828007%;
  margin-left: 51.178825799%;
  font-size: 3em;
  margin-bottom: 10%; }
  .titles::after {
    clear: both;
    content: "";
    display: table; }
  .titles:last-child {
    margin-right: 0; }

.second-title {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto; }
  .second-title::after {
    clear: both;
    content: "";
    display: table; }

.subpage-heading {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  margin-left: 34.1192171993%;
  font-size: 4em;
  padding-top: 5%;
  padding-bottom: 5%; }
  .subpage-heading::after {
    clear: both;
    content: "";
    display: table; }

.body-text {
  font-size: 1.25em;
  font-family: 'Rockwell', 'EB Garamond', serif; }

.body-text a {
  color: rgbA(0, 0, 128, 1);
  font-weight: 900; }

.body-text .par1 {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  margin-left: 8.5298042998%;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 31.7615656014%;
  margin-bottom: 10%; }
  .body-text .par1::after {
    clear: both;
    content: "";
    display: table; }
  .body-text .par1:last-child {
    margin-right: 0; }

.body-text .par2 {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  margin-left: 34.1192171993%;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 31.7615656014%;
  margin-bottom: 10%; }
  .body-text .par2::after {
    clear: both;
    content: "";
    display: table; }
  .body-text .par2:last-child {
    margin-right: 0; }

.body-text .par3 {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  margin-left: 51.178825799%;
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 31.7615656014%;
  margin-bottom: 10%; }
  .body-text .par3::after {
    clear: both;
    content: "";
    display: table; }
  .body-text .par3:last-child {
    margin-right: 0; }

.header-links {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  margin-top: 2%; }
  .header-links::after {
    clear: both;
    content: "";
    display: table; }

.header-links li {
  display: inline-block;
  margin-left: 10%;
  font-size: 2em; }

.contact-links {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  margin-left: 34.1192171993%; }
  .contact-links::after {
    clear: both;
    content: "";
    display: table; }

.contact-links li {
  display: inline-block; }

.twitter-link {
  margin-left: 100%; }

.linkedin-link {
  margin-left: 200%; }

.par1 i {
  margin-left: 150%;
  margin-top: -100%; }

.par2 i {
  margin-left: -100%;
  margin-top: -150%; }

.par3 i {
  margin-left: -120%;
  margin-top: -150%; }

.par3 .fa-picture-o {
  margin-left: -180%;
  margin-top: -150%; }

body {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  font-family: "Amatic SC";
  background-color: rgbA(255, 248, 220, 1);
  color: #333; }
  body::after {
    clear: both;
    content: "";
    display: table; }

#app {
  height: 100%;
  width: 100%; }

/*# sourceMappingURL=data:application/json;base64, */